---
title: "Data Work"
author: "K-Means Clustering"
format: 
  html:
    df-print: paged
---

Addison's Code: Libraries:

```{r, error=FALSE, warning=FALSE, message=FALSE}
library(rlang)
library(haven)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(fastDummies)
library(equatiomatic)
library(car)
library(sjPlot)
library(MASS)
library(lmtest)
library(gmodels)
library(tidyr)
library(sjmisc)
library(sjlabelled)
library(naniar)
library(cluster)
library(factoextra)
```

Read data from CSV

```{r}
data <- read_csv("C:/Users/sowmy/Desktop/STA_6257/Project_Data/data.csv")

```

We know UK is the primary country associated. Making a data frame excluding UK to better see frequencies of other countries.

```{r}
clean_data_uk <- na.omit(data)

#removing UK
clean_data <- clean_data_uk[clean_data_uk$Country != "United Kingdom",]
```

Summary Stats:

```{r}
summary(clean_data)
summary(clean_data_trim)

#Plot countries
ggplot(clean_data, aes(x=Country)) +
  geom_bar() +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))

#Create total sales column
clean_data <- clean_data %>% mutate(total = clean_data$Quantity*clean_data$UnitPrice)

#Set category breaks using quantiles
xs=quantile(clean_data$total,c(0,1/3,2/3,1))

#Label category breaks & Plot
df1 <- clean_data %>% mutate(category=cut(total, breaks=xs, labels=c("low","middle","high"),include.lowest = TRUE))
boxplot(df1$total~df1$category)

#Extra cleaning/checking
df1 <- na.omit(df1)
summary(df1)

#Creating some unique subsets for model testing
df2 <- subset(df1, Quantity > 0)
plot <- boxplot(total~category, data = df2)

#
df3 <- df2 %>% dplyr::select(Quantity,UnitPrice,CustomerID,InvoiceDate,total)
customer_data <- df3 %>% group_by(CustomerID) %>% summarize(Sales=sum(total), OrderCount=length(unique(InvoiceDate))) %>% mutate(AvgValue=Sales/OrderCount)
head(customer_data)


#Ranking and Normalization
df3_ranked <- customer_data %>% mutate(Sales=rank(Sales), OrderCount=rank(OrderCount, ties.method = "first"), AvgValue=rank(AvgValue))
df3_norm <- df3_ranked %>% mutate(Sales=scale(Sales), OrderCount=scale(OrderCount), AvgValue=scale(AvgValue))

summary(df3_norm)
sapply(df3_norm, sd)

# Create an empty vector to store WCSS values
wcss <- vector("numeric", length = 10)

# Iterate over a range of K values (e.g., from 1 to 10)
for (i in 1:10) {
  model <- kmeans(df3_norm[c("Sales", "OrderCount", "AvgValue")], centers = i, nstart = 10)
  wcss[i] <- ceiling(model$tot.withinss)
}

# Plot the WCSS values against the number of clusters
library(ggplot2)
ggplot(data.frame(K = 1:10, WCSS = wcss), aes(x = K, y = WCSS)) +
  geom_line() +
  geom_point() +
   labs(title = "Elbow Method to Find Optimal K", x = "Number of Clusters (K)", y = "Within-Cluster-Sum-of-Squares (WCSS)") +
  scale_x_continuous(breaks = seq(0, 10, by = 2))
```

```{r}
set.seed(100)
model1 <- kmeans(df3_norm[c("Sales", "OrderCount", "AvgValue")],4)

model1

df3_norm$Cluster <- model1$cluster
```

```{r}
#Plotting Clustering Results

options(repr.plot.width = 20, repr.plot.height = 15)
ggplot(df3_norm, aes(x=AvgValue, y=OrderCount, color=Cluster)) + 
  geom_point() + 
  theme(legend.position = "right", legend.text=element_text(size=15), axis.title = element_text(size = 10))


fviz_cluster(model1, data = df3_norm,
             palette = c("blue","green","orange","red"),
             geom = "point",
             ellipse.type = "convex",
             ggtheme = theme_bw()
)
```

Aleshas code:

```{r}
library(readr)
library(tidyverse)
library(ggplot2)
#install.packages("patchwork")
library(patchwork)
theme_set(theme_minimal())

data <- read_csv("~/STA6257Kmeans/data.csv")
#remove missing values
clean_data_uk<- na.omit(data)
#removing UK
clean_data <- clean_data_uk[clean_data_uk$Country != "United Kingdom",]
#pull in Country into df for Country plot
countryCount <- df2 %>% dplyr::select(Quantity,UnitPrice,CustomerID,InvoiceDate,total,Country)
customer_data.Country<- countryCount %>% group_by(Country) %>% summarize(Sales=sum(total))

#Lets create a new df's with top 5 and bottom 5 customer IDs for Country, Sales, OrderCount, and AvgValue, they may not be all be the same

top5AvgValues <-top_n(customer_data, 5, AvgValue)
top5Sales <-top_n(customer_data, 5, Sales)
top5OrderCount<-top_n(customer_data,5,OrderCount)
bottom5AvgValues <-top_n(customer_data, -5, AvgValue)
bottom5Sales <-top_n(customer_data, -5, Sales)
#Top 5 Countries based on Lifetime Sales
top5Country <-top_n(customer_data.Country, 5,Sales)

options(scipen = 999) #removes scientific notation
top5Countries<-ggplot(top5Country, aes(x=reorder(Country,-Sales), y=Sales)) + 
  geom_bar(stat='identity', fill = c("#9900C6", "#E7B800","#3399CC","#00CC66","#FF99FF"))+
  labs(title = "Top 5 Countries by Sales", y="Total Sales", x="Country")
top5Countries

#histogram of average value by CustomerID
top5.Avg<-ggplot(top5AvgValues, aes(x=reorder(CustomerID,-AvgValue),y=AvgValue, fill=CustomerID))+ 
  geom_bar(stat="identity", fill =c("#9900C6","#E7B800","#3399CC","#00CC66","#FF99FF"))+
  labs(title = "Top 5 Customers by Average Value", y="Lifetime Average", x="CustomerID")+
  theme(plot.title = element_text(color = "#0099f9", size = 20))

bottom5.Avg<-ggplot(bottom5AvgValues, aes(x=reorder(CustomerID,-AvgValue),y=AvgValue, fill=CustomerID))+ 
  geom_bar(stat="identity",fill =c("#9900C6","#E7B800","#3399CC","#00CC66","#FF99FF"))+
  labs(title = "Bottom 5 Customers by Average Value", x= "CustomerID",y="Average Total Value Spent")+
  theme(plot.title = element_text(color = "#0099f9", size = 20))

#display both plots
top5.Avg + bottom5.Avg

#histograms of Sales by CustomerID
top5.Sales<-ggplot(top5Sales, aes(x=reorder(CustomerID,-Sales),y=Sales, fill=CustomerID))+ 
  geom_bar(stat="identity",fill =c("#9900C6","#E7B800","#3399CC","#00CC66","#FF99FF"))+
  labs(title = "Top 5 Customers by Lifetime Sales", x= "CustomerID",y="Lifetime Customer Sales")+
  theme(plot.title = element_text(color = "#0099f9", size = 20))

bottom5.Sales<-ggplot(bottom5Sales, aes(x=reorder(CustomerID,-Sales),y=Sales, fill=CustomerID))+
  geom_bar(stat="identity",fill =c("#9900C6","#E7B800","#3399CC","#00CC66","#FF99FF"))+
  labs(title = "Bottom 5 Customers by Lifetime Sales",x= "CustomerID",y="Total Sales")+
  theme(plot.title = element_text(color = "#0099f9", size = 20))

#display both plots 
top5.Sales + bottom5.Sales

#histogram of top OrderCount by CustomerID
top5.Orders<-ggplot(top5OrderCount, aes(x=reorder(CustomerID,-OrderCount),y=OrderCount, fill=CustomerID))+ 
  geom_bar(stat="identity")+
  labs(title = "Top 5 Customers by OrderCount", x= "CustomerID",y="Lifetime Order Totals")+
  theme(plot.title = element_text(color = "#0099f9", size = 20))
top5.Orders

```

Columns: InvoiceNo, StockCode, Description, Quantity, InvoiceDate, UnitPrice, CustomerID, Country, total

The top 5 greatest sales for a customers are between \$100,000-\$200,000 while the least in sales range from \$50-\$100.

The top 5 greatest average value based on purchases and quantity of items is between \$4,000 and \$6,000 and the lowest 5 customers range from an average value of \$50-\$80.

Unsupervised clustering is more concerned with classification than deep insights. Yet shines a light on features of the data that can be further discovered with deeper analytics. We can see the relationship between sales and order totals based on customerID, however the goal of our analysis with k means clustering is to use unsupervised learning reveal patterns and relationships within this ecommerce data past what we can see in these plots. This will create a deeper understanding for the entire customer-ecommerce interaction and improve customer access and experiences. While K-Means clustering creates organization where there are large amounts of unlabeled data, this analysis is just a stepping stone for clarity and deeper investigations. 
